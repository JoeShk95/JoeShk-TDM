#include <a_samp>

#define LIGHTBLUE 							0x33CCFFAA
#define ORANGE 								0xFF8040FF
#define GREY 								0xAFAFAFAA
#define WHITE  								0xFFFFFFAA
#define YELLOW 								0xFFFF00AA
#define RED 								0xFF0000AA
#define GREEN 								0x5BC476FF

#define MODE_NAME                           "LS|ET"   // Set the gamemode name
#define MODE_VERSION                        "0.2a"    // Set the gamemode version

enum zoneinfo
{
	zone_name[27],
    Float:zone_minx,
    Float:zone_miny,
    Float:zone_minz,
    Float:zone_maxx,
    Float:zone_maxy,
    Float:zone_maxz
}

enum zInfo
{
	zColor,
	zzName[128],
    Float:zMinX,
    Float:zMinY,
    Float:zMaxX,
    Float:zMaxY,
};

new
    ZoneInfo[26][zInfo],
    PlayerInZone[MAX_PLAYERS],
	ShowZoneTextDraw[MAX_PLAYERS],
    Text:ZoneText[MAX_PLAYERS],
   	Zones[MAX_GANG_ZONES],
	PlayerTeam[MAX_PLAYERS],
	ZoneKills[20][26],
	Text:Box1,
	Text:Box2,
	Text:Info1,
	Text:Info2;
	
new Float:zones[][zoneinfo] =
{
	{ "'The Big Ear'",                -410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00},
	{ "Aldea Malvada",               -1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00},
	{ "Angel Pine",                  -2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00},
	{ "Arco del Oeste",               -901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00},
	{ "Avispa Country Club",         -2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00},
	{ "Avispa Country Club",         -2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00},
	{ "Avispa Country Club",         -2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00},
	{ "Avispa Country Club",         -2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10},
	{ "Avispa Country Club",         -2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10},
	{ "Avispa Country Club",         -2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70},
	{ "Back o Beyond",               -1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00},
	{ "Battery Point",               -2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00},
	{ "Bayside",                     -2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00},
	{ "Bayside Marina",              -2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00},
	{ "Beacon Hill",                  -399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50},
	{ "Blackfield",                    964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90},
	{ "Blackfield",                    964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90},
	{ "Blackfield Chapel",            1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90},
	{ "Blackfield Chapel",            1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90},
	{ "Blackfield Intersection",      1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90},
	{ "Blackfield Intersection",      1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90},
	{ "Blackfield Intersection",      1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90},
	{ "Blackfield Intersection",      1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90},
	{ "Blueberry",                     104.50,  -220.10,     2.30,   349.60,   152.20,   200.00},
	{ "Blueberry",                      19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00},
	{ "Blueberry Acres",              -319.60,  -220.10,     0.00,   104.50,   293.30,   200.00},
	{ "Caligula's Palace",            2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90},
	{ "Caligula's Palace",            2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90},
	{ "Calton Heights",              -2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00},
	{ "Chinatown",                   -2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00},
	{ "City Hall",                   -2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00},
	{ "Come-A-Lot",                   2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90},
	{ "Commerce",                     1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90},
	{ "Commerce",                     1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90},
	{ "Commerce",                     1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90},
	{ "Commerce",                     1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90},
	{ "Commerce",                     1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90},
	{ "Commerce",                     1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90},
	{ "Conference Center",            1046.10, -1804.20,   -89.00,  1323.90, -1722.20,   110.90},
	{ "Conference Center",            1073.20, -1842.20,   -89.00,  1323.90, -1804.20,   110.90},
	{ "Cranberry Station",           -2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00},
	{ "Creek",                        2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90},
	{ "Dillimore",                     580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00},
	{ "Doherty",                     -2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00},
	{ "Doherty",                     -2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00},
	{ "Downtown",                    -1982.30,   744.10,    -6.10, -1871.70,  1274.20,   200.00},
	{ "Downtown",                    -1871.70,  1176.40,    -4.50, -1620.30,  1274.20,   200.00},
	{ "Downtown",                    -1700.00,   744.20,    -6.10, -1580.00,  1176.50,   200.00},
	{ "Downtown",                    -1580.00,   744.20,    -6.10, -1499.80,  1025.90,   200.00},
	{ "Downtown",                    -2078.60,   578.30,    -7.60, -1499.80,   744.20,   200.00},
	{ "Downtown",                    -1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00},
	{ "Downtown Los Santos",          1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90},
	{ "Downtown Los Santos",          1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90},
	{ "Downtown Los Santos",          1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90},
	{ "Downtown Los Santos",          1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90},
	{ "Downtown Los Santos",          1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90},
	{ "Downtown Los Santos",          1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90},
	{ "Downtown Los Santos",          1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90},
	{ "Downtown Los Santos",          1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90},
	{ "Downtown Los Santos",          1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90},
	{ "East Beach",                   2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90},
	{ "East Beach",                   2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90},
	{ "East Beach",                   2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90},
	{ "East Beach",                   2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90},
	{ "East Los Santos",              2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90},
	{ "East Los Santos",              2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90},
	{ "East Los Santos",              2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90},
	{ "East Los Santos",              2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90},
	{ "East Los Santos",              2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90},
	{ "East Los Santos",              2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90},
	{ "East Los Santos",              2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90},
	{ "Easter Basin",                -1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00},
	{ "Easter Basin",                -1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00},
	{ "Easter Bay Airport",          -1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00},
	{ "Easter Bay Airport",          -1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00},
	{ "Easter Bay Airport",          -1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00},
	{ "Easter Bay Airport",          -1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00},
	{ "Easter Bay Airport",          -1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00},
	{ "Easter Bay Airport",          -1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40},
	{ "Easter Bay Airport",          -1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40},
	{ "Easter Bay Airport",          -1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40},
	{ "Easter Bay Chemicals",        -1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00},
	{ "Easter Bay Chemicals",        -1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00},
	{ "El Castillo del Diablo",       -464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00},
	{ "El Corona",                    1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90},
	{ "El Corona",                    1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90},
	{ "El Quebrados",                -1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00},
	{ "Esplanade East",              -1620.30,  1176.50,    -4.50, -1580.00,  1274.20,   200.00},
	{ "Esplanade East",              -1580.00,  1025.90,    -6.10, -1499.80,  1274.20,   200.00},
	{ "Esplanade East",              -1499.80,   578.30,   -79.60, -1339.80,  1274.20,    20.30},
	{ "Esplanade North",             -2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00},
	{ "Esplanade North",             -1996.60,  1358.90,    -4.50, -1524.20,  1592.50,   200.00},
	{ "Esplanade North",             -1982.30,  1274.20,    -4.50, -1524.20,  1358.90,   200.00},
	{ "Fallen Tree",                  -792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00},
	{ "Fallow Bridge",                 434.30,   366.50,     0.00,   603.00,   555.60,   200.00},
	{ "Fern Ridge",                    508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00},
	{ "Financial",                   -1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00},
	{ "Fisher's Lagoon",              1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00},
	{ "Flint Intersection",           -187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90},
	{ "Flint Range",                  -594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00},
	{ "Fort Carson",                  -376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00},
	{ "Foster Valley",               -2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00},
	{ "Foster Valley",               -2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00},
	{ "Frederick Bridge",             2759.20,   296.50,     0.00,  2774.20,   594.70,   200.00},
	{ "Gant Bridge",                 -2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00},
	{ "Gant Bridge",                 -2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00},
	{ "Ganton",                       2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90},
	{ "Ganton",                       2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90},
	{ "Garcia",                      -2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00},
	{ "Garcia",                      -2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00},
	{ "Garver Bridge",               -1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90},
	{ "Garver Bridge",               -1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90},
	{ "Garver Bridge",               -1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30},
	{ "Glen Park",                    1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90},
	{ "Glen Park",                    1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90},
	{ "Glen Park",                    1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90},
	{ "Green Palms",                   176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00},
	{ "Greenglass College",            964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90},
	{ "Greenglass College",            964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90},
	{ "Hampton Barns",                 603.00,   264.30,     0.00,   761.90,   366.50,   200.00},
	{ "Hankypanky Point",             2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00},
	{ "Harry Gold Parkway",           1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90},
	{ "Hashbury",                    -2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00},
	{ "Hilltop Farm",                  967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00},
	{ "Hunter Quarry",                 337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70},
	{ "Idlewood",                     1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90},
	{ "Idlewood",                     1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90},
	{ "Idlewood",                     1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90},
	{ "Idlewood",                     1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90},
	{ "Idlewood",                     2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90},
	{ "Idlewood",                     1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90},
	{ "Jefferson",                    1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90},
	{ "Jefferson",                    2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90},
	{ "Jefferson",                    2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90},
	{ "Jefferson",                    2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90},
	{ "Jefferson",                    2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90},
	{ "Jefferson",                    2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90},
	{ "Julius Thruway East",          2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90},
	{ "Julius Thruway East",          2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90},
	{ "Julius Thruway East",          2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90},
	{ "Julius Thruway East",          2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90},
	{ "Julius Thruway North",         2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90},
	{ "Julius Thruway North",         2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90},
	{ "Julius Thruway North",         2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90},
	{ "Julius Thruway North",         1938.80,  2508.20,   -89.00,  2121.40,  2624.20,   110.90},
	{ "Julius Thruway North",         1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90},
	{ "Julius Thruway North",         1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90},
	{ "Julius Thruway North",         1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90},
	{ "Julius Thruway North",         1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90},
	{ "Julius Thruway South",         1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90},
	{ "Julius Thruway South",         2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90},
	{ "Julius Thruway West",          1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90},
	{ "Julius Thruway West",          1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90},
	{ "Juniper Hill",                -2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00},
	{ "Juniper Hollow",              -2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00},
	{ "K.A.C.C. Military Fuels",      2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90},
	{ "Kincaid Bridge",              -1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90},
	{ "Kincaid Bridge",              -1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90},
	{ "Kincaid Bridge",              -1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90},
	{ "King's",                      -2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00},
	{ "King's",                      -2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00},
	{ "King's",                      -2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00},
	{ "LVA Freight Depot",            1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90},
	{ "LVA Freight Depot",            1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90},
	{ "LVA Freight Depot",            1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90},
	{ "LVA Freight Depot",            1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90},
	{ "LVA Freight Depot",            1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90},
	{ "Las Barrancas",                -926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00},
	{ "Las Brujas",                   -365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00},
	{ "Las Colinas",                  1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90},
	{ "Las Colinas",                  2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90},
	{ "Las Colinas",                  2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90},
	{ "Las Colinas",                  2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90},
	{ "Las Colinas",                  2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90},
	{ "Las Colinas",                  2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90},
	{ "Las Colinas",                  2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90},
	{ "Las Payasadas",                -354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00},
	{ "Las Venturas Airport",         1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90},
	{ "Las Venturas Airport",         1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90},
	{ "Las Venturas Airport",         1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90},
	{ "Las Venturas Airport",         1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50},
	{ "Last Dime Motel",              1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90},
	{ "Leafy Hollow",                -1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00},
	{ "Lil' Probe Inn",                -90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00},
	{ "Linden Side",                  2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90},
	{ "Linden Station",               2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90},
	{ "Linden Station",               2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40},
	{ "Little Mexico",                1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90},
	{ "Little Mexico",                1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90},
	{ "Los Flores",                   2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90},
	{ "Los Flores",                   2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90},
	{ "Los Santos International",     1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90},
	{ "Los Santos International",     1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90},
	{ "Los Santos International",     1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90},
	{ "Los Santos International",     1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90},
	{ "Los Santos International",     1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90},
	{ "Los Santos International",     2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90},
	{ "Marina",                        647.70, -1804.20,   -89.00,   851.40, -1577.50,   110.90},
	{ "Marina",                        647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90},
	{ "Marina",                        807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90},
	{ "Market",                        787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90},
	{ "Market",                        952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90},
	{ "Market",                       1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90},
	{ "Market",                        926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90},
	{ "Market Station",                787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80},
	{ "Martin Bridge",                -222.10,   293.30,     0.00,  -122.10,   476.40,   200.00},
	{ "Missionary Hill",             -2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00},
	{ "Montgomery",                   1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00},
	{ "Montgomery",                   1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00},
	{ "Montgomery Intersection",      1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00},
	{ "Montgomery Intersection",      1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00},
	{ "Mulholland",                   1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90},
	{ "Mulholland",                   1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90},
	{ "Mulholland",                   1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90},
	{ "Mulholland",                   1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90},
	{ "Mulholland",                   1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90},
	{ "Mulholland",                   1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90},
	{ "Mulholland",                    768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90},
	{ "Mulholland",                    687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90},
	{ "Mulholland",                    737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90},
	{ "Mulholland",                   1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90},
	{ "Mulholland",                    952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90},
	{ "Mulholland",                    911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90},
	{ "Mulholland",                    861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90},
	{ "Mulholland Intersection",      1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90},
	{ "North Rock",                   2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00},
	{ "Ocean Docks",                  2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90},
	{ "Ocean Docks",                  2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90},
	{ "Ocean Docks",                  2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90},
	{ "Ocean Docks",                  2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90},
	{ "Ocean Docks",                  2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90},
	{ "Ocean Docks",                  2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90},
	{ "Ocean Docks",                  2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90},
	{ "Ocean Flats",                 -2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00},
	{ "Octane Springs",                338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00},
	{ "Old Venturas Strip",           2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90},
	{ "Palisades",                   -2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00},
	{ "Palomino Creek",               2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00},
	{ "Paradiso",                    -2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00},
	{ "Pershing Square",              1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90},
	{ "Pilgrim",                      2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90},
	{ "Pilgrim",                      2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90},
	{ "Pilson Intersection",          1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90},
	{ "Pirates in Men's Pants",       1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90},
	{ "Playa del Seville",            2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90},
	{ "Prickle Pine",                 1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90},
	{ "Prickle Pine",                 1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90},
	{ "Prickle Pine",                 1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90},
	{ "Prickle Pine",                 1938.80,  2624.20,   -89.00,  2121.40,  2861.50,   110.90},
	{ "Queens",                      -2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00},
	{ "Queens",                      -2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00},
	{ "Queens",                      -2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00},
	{ "Randolph Industrial Estate",   1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90},
	{ "Redsands East",                1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90},
	{ "Redsands East",                1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90},
	{ "Redsands East",                1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90},
	{ "Redsands West",                1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90},
	{ "Redsands West",                1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90},
	{ "Redsands West",                1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90},
	{ "Redsands West",                1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90},
	{ "Regular Tom",                  -405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00},
	{ "Richman",                       647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90},
	{ "Richman",                       647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90},
	{ "Richman",                       225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90},
	{ "Richman",                       225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90},
	{ "Richman",                        72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90},
	{ "Richman",                        72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90},
	{ "Richman",                       321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90},
	{ "Richman",                       321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90},
	{ "Richman",                       321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90},
	{ "Richman",                       321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90},
	{ "Robada Intersection",         -1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90},
	{ "Roca Escalante",               2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90},
	{ "Roca Escalante",               2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90},
	{ "Rockshore East",               2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90},
	{ "Rockshore West",               1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90},
	{ "Rockshore West",               2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90},
	{ "Rodeo",                          72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90},
	{ "Rodeo",                          72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90},
	{ "Rodeo",                         225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90},
	{ "Rodeo",                         225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90},
	{ "Rodeo",                         334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90},
	{ "Rodeo",                         312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90},
	{ "Rodeo",                         422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90},
	{ "Rodeo",                         558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90},
	{ "Rodeo",                         466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90},
	{ "Rodeo",                         422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90},
	{ "Rodeo",                         466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90},
	{ "Rodeo",                         334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90},
	{ "Royal Casino",                 2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90},
	{ "San Andreas Sound",            2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00},
	{ "Santa Flora",                 -2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00},
	{ "Santa Maria Beach",             342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90},
	{ "Santa Maria Beach",              72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90},
	{ "Shady Cabin",                 -1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00},
	{ "Shady Creeks",                -1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00},
	{ "Shady Creeks",                -2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00},
	{ "Sobell Rail Yards",            2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90},
	{ "Spinybed",                     2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90},
	{ "Starfish Casino",              2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90},
	{ "Starfish Casino",              2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90},
	{ "Starfish Casino",              2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90},
	{ "Temple",                       1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90},
	{ "Temple",                       1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90},
	{ "Temple",                       1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90},
	{ "Temple",                        952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90},
	{ "Temple",                       1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90},
	{ "Temple",                       1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90},
	{ "The Camel's Toe",              2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90},
	{ "The Clown's Pocket",           2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90},
	{ "The Emerald Isle",             2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90},
	{ "The Farm",                    -1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90},
	{ "The Four Dragons Casino",      1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90},
	{ "The High Roller",              1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90},
	{ "The Mako Span",                1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00},
	{ "The Panopticon",               -947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00},
	{ "The Pink Swan",                1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90},
	{ "The Sherman Dam",              -968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00},
	{ "The Strip",                    2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90},
	{ "The Strip",                    2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90},
	{ "The Strip",                    2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90},
	{ "The Strip",                    2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90},
	{ "The Visage",                   1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90},
	{ "The Visage",                   1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90},
	{ "Unity Station",                1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50},
	{ "Valle Ocultado",               -936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00},
	{ "Verdant Bluffs",                930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90},
	{ "Verdant Bluffs",               1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90},
	{ "Verdant Bluffs",               1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90},
	{ "Verdant Meadows",                37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00},
	{ "Verona Beach",                  647.70, -2173.20,   -89.00,   930.20, -1804.20,   110.90},
	{ "Verona Beach",                  930.20, -2006.70,   -89.00,  1073.20, -1804.20,   110.90},
	{ "Verona Beach",                  851.40, -1804.20,   -89.00,  1046.10, -1577.50,   110.90},
	{ "Verona Beach",                 1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90},
	{ "Verona Beach",                 1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90},
	{ "Vinewood",                      787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90},
	{ "Vinewood",                      787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90},
	{ "Vinewood",                      647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90},
	{ "Vinewood",                      647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90},
	{ "Whitewood Estates",             883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90},
	{ "Whitewood Estates",            1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90},
	{ "Willowfield",                  1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90},
	{ "Willowfield",                  2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90},
	{ "Willowfield",                  2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90},
	{ "Willowfield",                  2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90},
	{ "Willowfield",                  2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90},
	{ "Willowfield",                  2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90},
	{ "Willowfield",                  2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90},
	{ "Yellow Bell Station",          1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00}
	/*// Main Zones
	{ "Los Santos",                     44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00},
	{ "Las Venturas",                  869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00},
	{ "Bone County",                  -480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00},
	{ "Tierra Robada",               -2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00},
	{ "Tierra Robada",               -1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00},
	{ "San Fierro",                  -2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00},
	{ "Red County",                  -1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00},
	{ "Flint County",                -1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00},
	{ "Whetstone",                   -2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}*/
};

new Float:BikerSpawns[][4] =
{
	{811.9022,-1496.6637,14.3991,318.6629},
	{826.0838,-1497.6449,14.3863,348.7197},
	{868.9575,-1501.4152,14.3651,137.8679},
	{889.7084,-1540.1653,13.5482,42.3236},
	{860.1805,-1538.5288,13.5516,7.5666},
	{810.4582,-1540.6486,13.5525,84.9607}
};

new Float:HustlerSpawns[][4] =
{
	{2732.2903,-1970.1333,13.5469,86.8407},
	{2747.0063,-1944.4613,17.3203,270.1426},
	{2758.3638,-1983.2142,13.5547,217.5021},
	{2781.1104,-1979.2581,13.5488,89.3709},
	{2793.3621,-1944.3829,17.3203,89.3708},
	{2795.0103,-1902.3308,13.5503,355.0565}
};

new Float:GroveSpawns[][4] =
{
	{2533.3279,-1700.5804,13.3828,22.0034},
	{2509.7629,-1653.7166,13.6778,135.7445},
	{2460.3157,-1649.1102,13.4651,179.9249},
	{2451.4299,-1687.9916,13.5370,312.4662},
	{2457.5474,-1718.5118,13.5798,297.1128},
	{2505.6924,-1695.4933,17.9575,1.3232}
};

new Float:BallasSpawns[][4] =
{
	{1955.7284,-1150.3953,21.5818,137.2877},
	{1928.7773,-1196.8691,20.0234,80.5739},
	{1947.5693,-1226.8374,19.8637,123.5009},
	{1990.2080,-1244.7445,20.3527,294.8959},
	{2013.2814,-1197.7610,20.0234,270.1423},
	{2046.6279,-1169.7651,23.1904,197.4483}
};

new Float:StripperSpawns[][4] =
{
	{2431.7988,-1245.3712,23.9755,89.0339},
	{2435.9316,-1206.2555,33.1526,268.2388},
	{2402.6877,-1213.8286,32.7344,184.5780},
	{2401.1826,-1243.7551,28.3849,177.6846},
	{2403.8774,-1222.4408,25.2681,260.7188},
	{2399.4958,-1250.0427,23.8916,176.7447}
};

new Float:RichSpawns[][4] =
{
	{1282.6293,-818.0699,84.1406,177.3482},
	{1306.1281,-799.8558,84.1406,216.5152},
	{1255.0936,-810.5741,84.1406,170.1180},
	{1260.3629,-797.0137,88.3125,237.4619},
	{1290.4919,-806.7654,88.3151,68.5736},
	{1255.6296,-775.4827,92.0313,180.4347}
};

new Float:BeachSpawns[][4] =
{
	{313.4075,-1822.5941,6.5037,80.1672},
	{289.2289,-1873.2229,6.4023,10.6066},
	{244.9187,-1866.4779,2.6979,359.3265},
	{164.3521,-1865.4626,3.1378,319.2195},
	{153.9702,-1942.9001,3.7734,359.9766},
	{161.5787,-1795.3125,3.8413,270.9892}
};

new Float:ChickenSpawns[][4] =
{
	{923.2118,-1342.6193,13.4779,89.6143},
	{922.7672,-1371.3160,13.3864,85.2276},
	{904.7494,-1360.9543,13.4913,269.7593},
	{906.0214,-1346.9912,18.3583,267.8792},
	{950.9828,-1382.3674,17.8594,181.3983},
	{958.1531,-1369.0372,13.6628,179.5183}
};

new Float:PoliceSpawns[][4] =
{
	{1537.2725,-1634.6559,13.5469,49.1940},
	{1545.6747,-1615.9031,13.3828,262.5761},
	{1606.7782,-1672.2323,6.2188,88.9879},
	{1576.6958,-1695.5256,6.2188,130.3483},
	{1551.3285,-1664.2432,6.2188,94.3147},
	{1530.2441,-1668.8726,6.2188,266.9630}
};

new Weapons[][32] =
{
	{"Unarmed (Fist)"},
	{"Brass Knuckles"},
	{"Golf Club"},
	{"Night Stick"},
	{"Knife"},
	{"Baseball Bat"},
	{"Shovel"},
	{"Pool Cue"},
	{"Katana"},
	{"Chainsaw"},
	{"Purple Dildo"},
	{"Big White Vibrator"},
	{"Medium White Vibrator"},
	{"Small White Vibrator"},
	{"Flowers"},
	{"Cane"},
	{"Grenade"},
	{"Teargas"},
	{"Molotov"},
	{" "},
	{" "},
	{" "},
	{"Colt 45"},
	{"Colt 45 (Silenced)"},
	{"Desert Eagle"},
	{"Normal Shotgun"},
	{"Sawnoff Shotgun"},
	{"Combat Shotgun"},
	{"Micro Uzi (Mac 10)"},
	{"MP5"},
	{"AK47"},
	{"M4"},
	{"Tec9"},
	{"Country Rifle"},
	{"Sniper Rifle"},
	{"Rocket Launcher"},
	{"Heat-Seeking Rocket Launcher"},
	{"Flamethrower"},
	{"Minigun"},
	{"Satchel Charge"},
	{"Detonator"},
	{"Spray Can"},
	{"Fire Extinguisher"},
	{"Camera"},
	{"Night Vision Goggles"},
	{"Infrared Vision Goggles"},
	{"Parachute"},
	{"Fake Pistol"}
};




main()
{
	print("====================================");
	print("|                                  |");
	print("|           ----------             |");
	print("|         Enemy Territory          |");
	print("|           By: Sneaky             |");
	print("|           ----------             |");
	print("|                                  |");
	print("====================================");
}

public OnGameModeInit()
{

	new
	    String[128];

	format(String,sizeof(String),"%s v%s",MODE_NAME,MODE_VERSION);
	SetGameModeText(String);
	
	LoadZones();
	
	AllowAdminTeleport(1);
	UsePlayerPedAnims();
	SetWorldTime(0);
	SetWeather(10);
	DisableInteriorEnterExits();
	
	SetTimer("UpdateZoneNamesForAll",1000,1);
	
	LoadVehicles("cars.ini");
	
	// Bikers
	AddPlayerClass(100,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(247,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(248,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(254,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	
	// Hustlers
	AddPlayerClass(29,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(66,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(19,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(21,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	
	// Grove
	AddPlayerClass(105,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(106,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(107,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(0,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	
	// Ballas
	AddPlayerClass(102,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(103,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(104,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(13,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	
	// Strippers
	AddPlayerClass(178,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(244,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(246,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(256,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	
	// The Rich
	AddPlayerClass(141,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(187,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(186,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(185,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	
	// Beach People
	AddPlayerClass(140,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(154,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(251,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(97,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	
	// Chicken
	AddPlayerClass(167,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	
	// Police
	AddPlayerClass(280,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(265,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(281,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	AddPlayerClass(266,0.0,0.0,0.0,0.0,0,0,0,0,0,0);
	
	
	for(new i = 0; i < sizeof(ZoneInfo); i++)
	{
	    Zones[i] = GangZoneCreate(ZoneInfo[i][zMinX],ZoneInfo[i][zMinY],ZoneInfo[i][zMaxX],ZoneInfo[i][zMaxY]);
 	}
 	
	Box1 = TextDrawCreate(320.0, 375, "- ~n~ - ~n~ - ~n~ - ~n~ -");
	TextDrawAlignment(Box1, 2);
	TextDrawBoxColor(Box1,0x000000FF);
	TextDrawColor(Box1,0x000000FF);
	TextDrawFont(Box1, 2);
	TextDrawLetterSize(Box1, 2.2, 4.0);
	TextDrawSetProportional(Box1, 1);
	TextDrawSetShadow(Box1, 1);
	TextDrawTextSize(Box1, 80.0, 1280.0);
	TextDrawUseBox(Box1, 1);

	Box2 = TextDrawCreate(320.0,0.0, "- ~n~ -");
	TextDrawAlignment(Box2, 2);
	TextDrawBoxColor(Box2,0x000000FF);
	TextDrawColor(Box2,0x000000FF);
	TextDrawFont(Box2, 2);
	TextDrawLetterSize(Box2, 2.2, 4.0);
	TextDrawSetProportional(Box2, 1);
	TextDrawSetShadow(Box2, 1);
	TextDrawTextSize(Box2, 80.0, 1280.0);
	TextDrawUseBox(Box2, 1);
	
	Info1 = TextDrawCreate(420.0, 380.0,"Enemy Territory");
	TextDrawAlignment(Info1,0);
	TextDrawFont(Info1,0);
	TextDrawLetterSize(Info1,1.0,2.8);
	TextDrawSetOutline(Info1,1);
	TextDrawSetProportional(Info1,1);
	TextDrawSetShadow(Info1,1);
	
	Info2 = TextDrawCreate(425.0, 410.0,"By: Sneaky ~n~Version: 0.2a");
	TextDrawAlignment(Info2,0);
	TextDrawFont(Info2,1);
	TextDrawLetterSize(Info2,0.6,1.4);
	TextDrawSetOutline(Info2,1);
	TextDrawSetProportional(Info2,1);
	TextDrawSetShadow(Info2,1);
	
	
	// Police cars & Planes / Helicopters
	AddStaticVehicle(519,1806.1066,-2406.8108,14.4731,220.1901,1,1);
    AddStaticVehicle(519,1851.0873,-2397.0818,14.4738,221.0776,1,1);
    AddStaticVehicle(519,1881.2903,-2364.6726,14.4760,231.6925,1,1);
    AddStaticVehicle(593,1990.4940,-2400.4700,14.0069,126.8314,58,8);
    AddStaticVehicle(593,1991.9357,-2377.5691,14.0096,111.9823,19,33);
    AddStaticVehicle(593,1994.2283,-2329.9182,14.0074,123.6920,68,8);
    AddStaticVehicle(593,1993.0359,-2307.1487,14.0073,121.4826,2,1);
    AddStaticVehicle(485,2005.4028,-2340.4004,13.2026,353.8798,1,74);
    AddStaticVehicle(485,1944.1885,-2234.3225,13.2017,358.4947,1,75);
    AddStaticVehicle(485,1893.2838,-2320.5076,13.2070,285.2385,1,76);
    AddStaticVehicle(485,1882.2479,-2390.3965,13.2133,266.7464,1,77);
    AddStaticVehicle(485,1915.2466,-2643.3474,13.2050,2.2446,1,78);
    AddStaticVehicle(553,1944.5242,-2639.1465,14.8823,28.0299,55,23);
    AddStaticVehicle(553,1984.2778,-2637.7561,14.8831,9.0602,94,116);
    AddStaticVehicle(553,2019.7615,-2642.5803,14.8759,318.3256,128,7);
    AddStaticVehicle(476,2124.7380,-2418.2964,14.2641,205.4615,7,6);
    AddStaticVehicle(476,2142.8672,-2434.3076,14.2587,144.2144,1,6);
    AddStaticVehicle(476,2107.1399,-2417.1648,14.2647,150.9743,135,14);
    AddStaticVehicle(476,2083.0217,-2429.4854,14.2543,182.9969,119,117);
    AddStaticVehicle(510,2081.9866,-2359.7229,13.1551,64.1485,39,39);
    AddStaticVehicle(510,1866.6115,-2660.4602,13.1552,18.6151,6,6);
    AddStaticVehicle(513,1881.0273,-2632.3281,14.0996,40.9586,21,36);
    AddStaticVehicle(513,1891.9824,-2632.7056,14.1085,332.5663,138,122);
    AddStaticVehicle(593,1840.4315,-2631.8525,14.0080,319.2033,22,1);
    AddStaticVehicle(593,1822.1689,-2629.8713,14.0076,35.6965,36,8);
    AddStaticVehicle(593,1806.7133,-2630.3167,14.0037,32.0461,51,1);
    AddStaticVehicle(476,1752.8643,-2632.2061,14.2631,1.4834,103,102);
    AddStaticVehicle(481,1698.6532,-2692.0225,13.0592,256.1956,26,1);
    AddStaticVehicle(485,1707.5415,-2646.3325,13.2052,359.6846,1,73);
    AddStaticVehicle(487,1716.0422,-2437.5767,13.7316,148.7897,18,108);
    AddStaticVehicle(487,1737.4827,-2432.7019,13.7340,192.0326,24,78);
    AddStaticVehicle(487,1752.5586,-2452.2275,13.7322,147.2027,54,29);
    AddStaticVehicle(417,1636.0142,-2409.7209,13.6266,193.2301,0,0);
    AddStaticVehicle(417,1655.8718,-2410.4551,13.6350,156.9428,0,0);
    AddStaticVehicle(510,1600.9696,-2395.0103,13.2262,298.2056,28,28);
    AddStaticVehicle(497,1575.9307,-2408.7253,13.7347,153.2041,0,1);
    AddStaticVehicle(497,1554.8207,-2406.4417,13.7308,190.6669,0,1);
    AddStaticVehicle(596,1554.5928,-1615.0944,13.1075,143.0,0,1);
    AddStaticVehicle(596,1560.2781,-1614.7255,13.1065,143.0,0,1);
    AddStaticVehicle(596,1565.3577,-1615.1208,13.1006,143.0,0,1);
    AddStaticVehicle(596,1570.3990,-1615.1421,13.1035,143.0,0,1);
    AddStaticVehicle(596,1575.5455,-1615.0767,13.1051,143.0,0,1);
    AddStaticVehicle(427,1600.4679,-1607.5685,13.6005,88.3196,0,1);
    AddStaticVehicle(427,1599.9907,-1613.6184,13.5959,89.1377,0,1);
    AddStaticVehicle(427,1600.0579,-1619.9817,13.5981,89.7130,0,1);
    AddStaticVehicle(427,1599.8956,-1626.2255,13.5964,89.2148,0,1);
    AddStaticVehicle(596,1602.4196,-1683.8865,5.6119,269.8652,0,1);
    AddStaticVehicle(596,1591.4985,-1711.0421,5.6128,0.0437,0,1);
    AddStaticVehicle(596,1602.2015,-1687.9944,5.6107,89.8454,0,1);
    AddStaticVehicle(596,1602.0392,-1692.0045,5.6110,89.1947,0,1);
    AddStaticVehicle(596,1595.4047,-1711.5936,5.6116,180.3378,0,1);
    AddStaticVehicle(523,1582.1798,-1667.0845,5.4650,240.5349,0,0);
    AddStaticVehicle(523,1582.3419,-1669.2539,5.4650,239.3729,0,0);
    AddStaticVehicle(523,1582.1704,-1671.2072,5.4657,237.9856,0,0);
    AddStaticVehicle(523,1582.1514,-1673.4630,5.4652,238.0086,0,0);
    AddStaticVehicle(574,1526.7522,-1655.7896,5.6158,270.8942,26,26);
    AddStaticVehicle(574,1526.7056,-1652.4664,5.6158,270.6263,26,26);
    AddStaticVehicle(574,1526.5553,-1642.8456,5.6158,180.3993,26,26);
    AddStaticVehicle(574,1530.7841,-1642.8046,5.6158,179.2186,26,26);
    AddStaticVehicle(416,2033.1270,-1432.2743,17.2845,180.0169,1,3);
    AddStaticVehicle(416,2016.3477,-1414.9769,17.1412,86.7151,1,3);
    
    // Hustler Spawn Armor & Health Pickups
	CreatePickup(1242,3,2752.1421,-1962.5563,13.5469); // Armor
	CreatePickup(1242,3,2785.2817,-1953.6886,13.5469); // Armor
	CreatePickup(1242,3,2801.5525,-1940.7423,17.3203); // Armor
	CreatePickup(1240,3,2789.7156,-1983.3312,13.5508); // Health
	CreatePickup(1240,3,2735.8252,-1938.0723,13.5469); // Health
	CreatePickup(1240,3,2739.7737,-1982.1135,13.5469); // Health

    // Grove Spawn Armor & Health Pickups
	CreatePickup(1242,3,2478.7256,-1687.2051,13.5078); // Armor
	CreatePickup(1242,3,2532.4836,-1664.8149,15.1668); // Armor
	CreatePickup(1242,3,2489.3967,-1646.3186,14.0703); // Armor
	CreatePickup(1240,3,2460.3904,-1647.2396,13.4695); // Health
	CreatePickup(1240,3,2461.0496,-1670.3574,13.4961); // Health
	CreatePickup(1240,3,2522.6870,-1682.4821,15.4970); // Health
	
	// LSPD Spawn Armor & Health Pickups
	CreatePickup(1242,3,1544.1443,-1631.8950,13.3828); // Armor
	CreatePickup(1242,3,1547.6851,-1716.3872,6.2188);  // Armor
	CreatePickup(1242,3,1530.2324,-1661.9862,6.2188);  // Armor
	CreatePickup(1240,3,1552.7406,-1677.7397,6.2188);  // Health
	CreatePickup(1240,3,1607.5920,-1700.2288,6.2188);  // Health
	CreatePickup(1240,3,1580.5273,-1634.2939,13.5620); // Health
	CreatePickup(1240,3,1547.9750,-1616.3835,13.3828); // Health
	
	// Ballas Spawn Armor & Health Pickups
	CreatePickup(1242,3,2042.4653,-1161.0409,23.0931); // Armor
	CreatePickup(1242,3,1957.5872,-1174.2780,20.0735); // Armor
	CreatePickup(1242,3,1902.2228,-1202.4713,19.9177); // Armor
	CreatePickup(1242,3,1880.8387,-1269.5029,13.5469); // Armor
	CreatePickup(1242,3,1961.0652,-1228.0631,19.9831); // Armor
	CreatePickup(1240,3,1901.9128,-1119.9246,25.7503); // Health
	CreatePickup(1240,3,1977.0902,-1199.7257,25.8061); // Health
	CreatePickup(1240,3,2047.6418,-1235.0447,23.3423); // Health

    // Biker Spawn Armor & Health Pickups
	CreatePickup(1242,3,834.9135,-1533.6841,13.6140);  // Armor
	CreatePickup(1242,3,898.1337,-1520.9698,13.8211);  // Armor
	CreatePickup(1242,3,863.8260,-1471.0063,13.6174);  // Armor
	CreatePickup(1242,3,821.2690,-1503.0093,13.5938);  // Armor
	CreatePickup(1240,3,835.5894,-1472.1622,12.7077);  // Health
	CreatePickup(1240,3,851.3289,-1514.4362,12.7131);  // Health
	CreatePickup(1240,3,848.3857,-1534.2950,13.5842);  // Health
	CreatePickup(1240,3,795.7275,-1522.6187,13.5648);  // Health

    // Stripper Spawn Armor & Health Pickups
	CreatePickup(1242,3,2390.8484,-1225.2587,31.3906); // Armor
	CreatePickup(1242,3,2440.1194,-1224.0342,24.7605); // Armor
	CreatePickup(1242,3,2419.3003,-1218.3964,36.0313); // Armor
	CreatePickup(1242,3,2409.4148,-1266.9701,24.1983); // Armor
	CreatePickup(1240,3,2421.6797,-1245.5873,23.8814); // Health
	CreatePickup(1240,3,2424.0588,-1220.2856,25.4867); // Health
	CreatePickup(1240,3,2394.8735,-1218.4684,26.9643); // Health
	CreatePickup(1240,3,2423.9265,-1203.1840,40.9766); // Health

    // Rich Spawn Armor & Health Pickups
	CreatePickup(1242,3,1295.9690,-785.7518,88.3125);  // Armor
	CreatePickup(1242,3,1260.2373,-786.7930,95.9631);  // Armor
	CreatePickup(1242,3,1305.2842,-795.0776,84.1406);  // Armor
	CreatePickup(1242,3,1250.6338,-818.0981,84.1406);  // Armor
	CreatePickup(1240,3,1269.4884,-832.8119,83.1406);  // Health
	CreatePickup(1240,3,1250.3975,-783.4413,90.4772);  // Health
	CreatePickup(1240,3,1221.3356,-817.8177,86.6561);  // Health
	CreatePickup(1240,3,1293.0674,-790.2771,92.0313);  // Health

    // Beach Spawn Armor & Health Pickups
	CreatePickup(1240,3,149.8810,-1820.0750,3.7489);   // Armor
	CreatePickup(1240,3,172.0103,-1951.4279,3.7734);   // Armor
	CreatePickup(1240,3,227.5893,-1870.2273,2.4949);   // Armor
	CreatePickup(1240,3,288.0501,-1877.0817,2.2956);   // Armor
	CreatePickup(1240,3,358.8286,-1816.4159,4.3305);   // Armor
	CreatePickup(1240,3,224.6130,-1870.2804,2.5234);   // Health
	CreatePickup(1240,3,309.3752,-1818.2032,4.2448);   // Health
	CreatePickup(1240,3,302.8145,-1769.4327,7.6797);   // Health
	CreatePickup(1240,3,160.7810,-1773.6556,4.3749);   // Health

    // Chicken Spawn Armor & Health Pickups
	CreatePickup(1240,3,927.9808,-1352.9265,13.3438);  // Armor
	CreatePickup(1240,3,874.8328,-1363.4236,25.6484);  // Armor
	CreatePickup(1240,3,958.4090,-1381.3816,13.6563);  // Armor
	CreatePickup(1240,3,986.3093,-1338.1450,21.6563);  // Armor
	CreatePickup(1240,3,1001.7573,-1370.8466,13.2465); // Health
	CreatePickup(1240,3,970.2950,-1309.5544,13.5547);  // Health
	CreatePickup(1240,3,945.8793,-1337.6949,16.3384);  // Health
	CreatePickup(1240,3,895.0787,-1337.6965,17.5418);  // Health

	return 1;
}

public OnGameModeExit()
{
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{

	TogglePlayerControllable(playerid, false);

	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid,512.8511,-17.5289,1001.5653);
	SetPlayerFacingAngle(playerid, 328.6663);
	SetPlayerCameraPos(playerid,514.8894,-14.1297,1001.5653+1);
	SetPlayerCameraLookAt(playerid,512.8511,-17.5289,1001.5653);
	SetPlayerInterior(playerid, 3);
	
	PlayerPlaySound(playerid,1097,0.0,0.0,0.0);
	
	switch(classid)
	{
	    case 0,1,2,3:     { PlayerTeam[playerid] = 1; GameTextForPlayer(playerid,"~n~~n~~n~~r~<<~w~ Bikers ~r~>>", 950, 3);               }
 	    case 4,5,6,7:     { PlayerTeam[playerid] = 2; GameTextForPlayer(playerid,"~n~~n~~n~~r~<<~w~ Hustlers ~r~>>", 950, 3);             }
	    case 8,9,10,11:   { PlayerTeam[playerid] = 3; GameTextForPlayer(playerid,"~n~~n~~n~~r~<<~w~ Grove Street Family ~r~>>", 950, 3);  }
	    case 12,13,14,15: { PlayerTeam[playerid] = 4; GameTextForPlayer(playerid,"~n~~n~~n~~r~<<~w~ Ballas Family ~r~>>", 950, 3);        }
	    case 16,17,18,19: { PlayerTeam[playerid] = 5; GameTextForPlayer(playerid,"~n~~n~~n~~r~<<~w~ Strippers ~r~>>", 950, 3);            }
	    case 20,21,22,23: { PlayerTeam[playerid] = 6; GameTextForPlayer(playerid,"~n~~n~~n~~r~<<~w~ Rich People ~r~>>", 950, 3);          }
	    case 24,25,26,27: { PlayerTeam[playerid] = 7; GameTextForPlayer(playerid,"~n~~n~~n~~r~<<~w~ Beach People ~r~>>", 950, 3);         }
	    case 28:          { PlayerTeam[playerid] = 8; GameTextForPlayer(playerid,"~n~~n~~n~~r~<<~w~ Chickens ~r~>>", 950, 3);             }
	    case 29,30,31,32: { PlayerTeam[playerid] = 9; GameTextForPlayer(playerid,"~n~~n~~n~~r~<<~w~ Los Santos Police ~r~>>", 950, 3);    }
	}
	
	return 1;
}

public OnPlayerConnect(playerid)
{

	SendDeathMessage(INVALID_PLAYER_ID,playerid,200);
     
	ZoneText[playerid] = TextDrawCreate(460.0,420.0," ");
	TextDrawAlignment(ZoneText[playerid],1);
	TextDrawFont(ZoneText[playerid],0);
	TextDrawLetterSize(ZoneText[playerid],0.6,1.8);
	TextDrawColor(ZoneText[playerid],0xffffffcc);
	TextDrawSetOutline(ZoneText[playerid],1);
	TextDrawSetProportional(ZoneText[playerid],1);
	TextDrawSetShadow(ZoneText[playerid],1);
	
	ShowZoneTextDraw[playerid] = 0;
	
	PlayerPlaySound(playerid,1097,0.0,0.0,0.0);
	
	TextDrawShowForPlayer(playerid, Box1);
    TextDrawShowForPlayer(playerid, Box2);
    TextDrawShowForPlayer(playerid, Info1);
    TextDrawShowForPlayer(playerid, Info2);
	
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{

	SendDeathMessage(INVALID_PLAYER_ID,playerid,201);
     
    ShowZoneTextDraw[playerid] = 0;

	return 1;
}

public OnPlayerSpawn(playerid)
{
	new
	    randz;
	    
	for(new z = 0; z < sizeof(ZoneInfo); z++)
	{
		new
			col = ZoneInfo[z][zColor];
		
	    IntToHex(col);
		GangZoneShowForPlayer(playerid, z, col);
	}
	
	ShowZoneTextDraw[playerid] = 1;
	
	GiveRandomWeapons(playerid);
	
	SetPlayerInterior(playerid,0);
	PlayerPlaySound(playerid, 1098,0.0,0.0,0.0);
	
	TextDrawHideForPlayer(playerid, Box1);
    TextDrawHideForPlayer(playerid, Box2);
    TextDrawHideForPlayer(playerid, Info1);
    TextDrawHideForPlayer(playerid, Info2);
    
    SetPlayerTeam(playerid, PlayerTeam[playerid]);
    
	if(PlayerTeam[playerid] == 1)
	{
		randz = random(sizeof(BikerSpawns));
		SetPlayerPos(playerid, BikerSpawns[randz][0], BikerSpawns[randz][1], BikerSpawns[randz][2]);
		SetPlayerColor(playerid, setAlpha( 0x7E3F00FF, 120));
	}
 	if(PlayerTeam[playerid] == 2)
    {
		randz = random(sizeof(HustlerSpawns));
		SetPlayerPos(playerid, HustlerSpawns[randz][0], HustlerSpawns[randz][1], HustlerSpawns[randz][2]);
		SetPlayerColor(playerid, setAlpha( 0x408080FF, 120));
	}
	if(PlayerTeam[playerid] == 3)
	{
		randz = random(sizeof(GroveSpawns));
		SetPlayerPos(playerid, GroveSpawns[randz][0], GroveSpawns[randz][1], GroveSpawns[randz][2]);
		SetPlayerColor(playerid, setAlpha( 0x008000FF, 120));
	}
	if(PlayerTeam[playerid] == 4)
	{
		randz = random(sizeof(BallasSpawns));
		SetPlayerPos(playerid, BallasSpawns[randz][0], BallasSpawns[randz][1], BallasSpawns[randz][2]);
		SetPlayerColor(playerid, setAlpha( 0x440044FF, 120));
	}
	if(PlayerTeam[playerid] == 5)
	{
		randz = random(sizeof(StripperSpawns));
		SetPlayerPos(playerid, StripperSpawns[randz][0], StripperSpawns[randz][1], StripperSpawns[randz][2]);
		SetPlayerColor(playerid, setAlpha( 0xFF90FFFF, 120));
	}
	if(PlayerTeam[playerid] == 6)
	{
		randz = random(sizeof(RichSpawns));
		SetPlayerPos(playerid, RichSpawns[randz][0], RichSpawns[randz][1], RichSpawns[randz][2]);
		SetPlayerColor(playerid, setAlpha( 0xFFFFFFFF, 120));
	}
	if(PlayerTeam[playerid] == 7)
	{
		randz = random(sizeof(BeachSpawns));
		SetPlayerPos(playerid, BeachSpawns[randz][0], BeachSpawns[randz][1], BeachSpawns[randz][2]);
		SetPlayerColor(playerid, setAlpha( 0xE00000FF, 120));
	}
    if(PlayerTeam[playerid] == 8)
	{
		randz = random(sizeof(ChickenSpawns));
		SetPlayerPos(playerid, ChickenSpawns[randz][0], ChickenSpawns[randz][1], ChickenSpawns[randz][2]);
		SetPlayerColor(playerid, setAlpha( 0xFFFF00FF, 120));
	}
	if(PlayerTeam[playerid] == 9)
	{
		randz = random(sizeof(PoliceSpawns));
		SetPlayerPos(playerid, PoliceSpawns[randz][0], PoliceSpawns[randz][1], PoliceSpawns[randz][2]);
		SetPlayerColor(playerid, setAlpha( 0x0000FFFF, 120));
	}
    
	return 1;
}


stock GiveRandomWeapons(playerid)
{

	new
		randwep = random(3);

	if(randwep == 0)
	{
	    GivePlayerWeapon(playerid, 4, 1);
	    GivePlayerWeapon(playerid, 9, 1);
	    GivePlayerWeapon(playerid, 27, 500);
	    GivePlayerWeapon(playerid, 28, 500);
	}
	else if(randwep == 1)
	{
	    GivePlayerWeapon(playerid, 16, 500);
	    GivePlayerWeapon(playerid, 24, 500);
	    GivePlayerWeapon(playerid, 31, 500);
	    GivePlayerWeapon(playerid, 42, 500);
	}
	else if(randwep == 2)
	{
	    GivePlayerWeapon(playerid, 41, 500);
	    GivePlayerWeapon(playerid, 32, 500);
	    GivePlayerWeapon(playerid, 25, 500);
	    GivePlayerWeapon(playerid, 5, 1);
	}
	else if(randwep == 3)
	{
	    GivePlayerWeapon(playerid, 30, 500);
	    GivePlayerWeapon(playerid, 16, 500);
	    GivePlayerWeapon(playerid, 6, 1);
	    GivePlayerWeapon(playerid, 9, 1);
	}
	else
	{
	    GivePlayerWeapon(playerid, 41, 500);
	    GivePlayerWeapon(playerid, 32, 500);
	    GivePlayerWeapon(playerid, 25, 500);
	    GivePlayerWeapon(playerid, 5, 1);
	}
	
	return 1;
}

stock SendGangMSG(playerid, color,const string[])
{

	for(new p = 0; p <MAX_PLAYERS; p ++)
	{
		if(IsPlayerConnected(p) == 1)
		{
			if(PlayerTeam[p] == PlayerTeam[playerid])
			{
			    SendClientMessage(p, color, string);
			}
		}
	}
	
	return true;
}

public OnPlayerDeath(playerid, killerid, reason)
{

	new
	    string[128],
	    pName[128],
	    kName[128],
	    Float:Health,
	    Float:Armor,
 	  	Float:x,
		Float:y,
		Float:z;
	    
    ShowZoneTextDraw[playerid] = 0;
    
    SendDeathMessage(killerid,playerid,reason);
    
    if (reason == 255 || killerid == 255)
    {
        GameTextForPlayer(playerid, "~r~-$1000,-",900,1);
        GivePlayerMoney(playerid, -1000);
        SetPlayerScore(playerid, GetPlayerScore(playerid)-1);
    }


	if(PlayerTeam[killerid] != PlayerTeam[playerid])
 	{
 		GetPlayerHealth(killerid, Health);
		GetPlayerArmour(killerid, Armor);
		
		GetPlayerName(killerid, kName,sizeof(kName));
 	    GetPlayerName(playerid, pName,sizeof(pName));
 	    
  		GameTextForPlayer(killerid, "~g~+$1000,-",500,1);
        GivePlayerMoney(killerid, 1000);
        SetPlayerScore(killerid, GetPlayerScore(killerid)+1);
        
        format(string,sizeof(string),"You killed %s with a %s (Health Left: %.0f | Armor left: %.0f | Distance: %.2f ft)",pName,Weapons[reason],Health,Armor,GetDistanceBetweenPlayers(playerid,killerid));
        SendClientMessage(killerid, ORANGE, string);
        
        format(string,sizeof(string),"You got killed by %s with a %s (%s's Health Left: %.0f | Armor left: %.0f | Distance: %.2f ft)",kName,Weapons[reason],kName,Health,Armor,GetDistanceBetweenPlayers(playerid,killerid));
        SendClientMessage(playerid, ORANGE, string);
        
        /*if(GetDistanceBetweenPlayers(playerid,killerid) > 50)
		{
		    GameTextForPlayer(killerid, "~w~DISTANCE BONUS~n~~g~$2500,-",1500,1);
		    GivePlayerMoney(killerid, 2500);
		}
		
        if(GetDistanceBetweenPlayers(playerid,killerid) > 100)
		{
		    GameTextForPlayer(killerid, "~w~SUPER DISTANCE BONUS~n~~g~$5000,-",1500,1);
		    GivePlayerMoney(killerid, 5000);
		}
		
        if(GetDistanceBetweenPlayers(playerid,killerid) > 150)
		{
		    GameTextForPlayer(killerid, "~w~MEGA DISTANCE BONUS~n~~g~$7500,-",1500,1);
		    GivePlayerMoney(killerid, 7500);
		}*/

		GetPlayerPos(killerid, x, y, z);

		for(new i = 0; i < sizeof(ZoneInfo); i++)
		{
			if(x >= ZoneInfo[i][zMinX] && x < ZoneInfo[i][zMaxX] && y>= ZoneInfo[i][zMinY] && y < ZoneInfo[i][zMaxY])
			{
 				ZoneKills[PlayerTeam[killerid]][i] ++;

 				if(ZoneKills[PlayerTeam[killerid]][i] == 2 && ZoneKills[PlayerTeam[playerid]][i] == 2)
 				{
 				    GangZoneFlashForAll(i,0xFF0000AA);
 				}
 				TakeOverTurf(killerid);
			}
		}
	}

	return 1;
}

public OnPlayerText(playerid, text[])
{

	new
	    string[128],
	    pName[MAX_PLAYER_NAME];
	    
	GetPlayerName(playerid, pName,sizeof(pName));

	if(text[0] == '!')
	{
		format(string, sizeof(string),"(GangChat) %s: %s",pName,text[1]);
		SendGangMSG(playerid, LIGHTBLUE ,string);
   		return false;
	}
	
	return 1;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	new
		cmd[256],
		idx;

	cmd = strtok(cmdtext, idx);
	
	if (strcmp("/kill", cmdtext, true, 10) == 0)
	{
		SetPlayerHealth(playerid,0);
		return 1;
	}
	
	if (strcmp("/help", cmdtext, true, 10) == 0)
	{
	    SendClientMessage(playerid, GREEN, "---------------------------------------------------------------------------");
	    SendClientMessage(playerid, ORANGE, "Los Santos - Enemy Territory | Turfwars - By Sneaky v0.2a");
	    SendClientMessage(playerid, WHITE, "The goal is to kill enemy gangs and take over gangturfs.");
	    SendClientMessage(playerid, WHITE, "For every enemy killed you will receive $1000,-.");
	    SendClientMessage(playerid, WHITE, "Commands: /kill /help /anims | Use \"!\" as prefix for gangchat.");
	    SendClientMessage(playerid, WHITE, "More commands will be added soon, ......this is a beta!");
	    SendClientMessage(playerid, GREEN, "---------------------------------------------------------------------------");
	    return 1;
	}
	
	if (strcmp("/anims", cmdtext, true, 10) == 0)
	{
	    SendClientMessage(playerid, GREEN, "---------------------------------------------------------------------------");
	    SendClientMessage(playerid, ORANGE, "Los Santos - Enemy Territory | Turfwars - By Sneaky v0.2a");
	    SendClientMessage(playerid, WHITE, "/surrender /drunk /bomb /arrest /laugh /lookout/rob /wankin");
	    SendClientMessage(playerid, WHITE, "/coparrest /wankout /arrested /injured /slapped /fsmoking");
	    SendClientMessage(playerid, WHITE, "/coplook /lay /cover /vomit /eat /wave /slapass /death /fu");
	    SendClientMessage(playerid, WHITE, "/deal /crack /kiss /piss /smoke /sit /strip /chat /dance");
	    SendClientMessage(playerid, WHITE, "Type /stop to stop using an animation.");
	    SendClientMessage(playerid, GREEN, "---------------------------------------------------------------------------");
	    return 1;
	}
	
	if(strcmp(cmd, "/stop", true) == 0)
	{
		ClearAnimations(playerid);
		return 1;
	}
	
 	if(strcmp(cmd, "/surrender", true) == 0)
 	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
			return 1;
     	}
	}

    if(strcmp(cmd, "/drunk", true) == 0)
	{
        if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
         	 ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
          	 return 1;
     	}
    }

    if (strcmp("/bomb", cmdtext, true) == 0)
	{
        if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
	      ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0,0,0,0,0,0);
		  return 1;
		}
	}

    if (strcmp("/arrest", cmdtext, true, 7) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
	      ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0,0,0,0,0,0);
		  return 1;
		}
    }

    if (strcmp("/laugh", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
      		ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/lookout", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0,0,0,0,0,0);
		  	return 1;
		}
	}
    if (strcmp("/rob", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/wankin", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0,0,0,0,0,0);
		  	return 1;
		}
 	}

    if (strcmp("/coparrest", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
      		ApplyAnimation(playerid, "POLICE", "plc_drgbst_01", 4.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/wankout", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "PAULNMAC", "wank_out", 4.0,0,0,0,0,0);
			return 1;
		}
	}

    if (strcmp("/arrested", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
      		ApplyAnimation(playerid, "POLICE", "crm_drgbst_01", 4.0,0,0,0,0,0);
 	 		return 1;
		}
	}

    if (strcmp("/injured", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
      		ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.0,0,0,0,0,0);
	  		return 1;
		}
	}

    if (strcmp("/slapped", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
      		ApplyAnimation(playerid, "SWEET", "ho_ass_slapped", 4.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/fsmoking", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/coplook", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/lay", cmdtext, true, 6) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid,"BEACH", "bather", 4.0,0,0,0,0,0);
		  	return 1;
		}
    }

    if (strcmp("/cover", cmdtext, true, 3) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "ped", "cower", 3.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/vomit", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
	      	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/eat", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
	      	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/wave", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
	      	ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/slapass", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/death", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0,0,0,0,0,0);
		  	return 1;
		}
    }

    if (strcmp("/deal", cmdtext, true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/kiss", cmdtext, true, 5) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 3.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/crack", cmdtext, true, 6) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/piss", cmdtext, true, 8) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid, "PAULNMAC", "Piss_in", 3.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/smoke", cmdtext, true, 4) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0,0,0,0,0,0);
		  	return 1;
		}
	}

    if (strcmp("/sit", cmdtext, true, 4) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
          	ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.0,0,0,0,0,0);
		  	return 1;
		}
    }

    if (strcmp("/fu", cmdtext, true, 2) == 0) 
    {
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
	      	ApplyAnimation( playerid,"ped", "fucku", 4.1,0, 1, 1, 1, 1 );
		  	return 1;
		}
    }

    if (strcmp("/strip", cmdtext, true, 6) == 0)
    {
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
     	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
 			return 1;
		}
    }

    if(strcmp(cmd, "/chat", true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
         	ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
         	return 1;
     	}
	}

 	if(strcmp(cmd, "/dance", true) == 0)
	{
 		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     	{
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
 	  		return 1;
		}
 	}

	return 0;
}

forward UpdateZoneNamesForAll();
public UpdateZoneNamesForAll()
{

	for(new p = 0; p <MAX_PLAYERS; p ++)
	{
		PlayerInZone[p] = 0;
		
		if(IsPlayerConnected(p) && ShowZoneTextDraw[p] == 1)
		{
			new
				Float:x,
				Float:y,
				Float:z,
				string[128];

			GetPlayerPos(p,x,y,z);
			
			for(new i = 0; i < sizeof(ZoneInfo); i++)
			{
 				if(x >= ZoneInfo[i][zMinX] && x < ZoneInfo[i][zMaxX] && y>= ZoneInfo[i][zMinY] && y < ZoneInfo[i][zMaxY])
				{
			  		PlayerInZone[p] = 1;
			  		TextDrawHideForPlayer(p, ZoneText[p]);
					format(string, sizeof(string), "%s Gangturf",ZoneInfo[i][zzName]);
					TextDrawSetString(ZoneText[p],string);
    				TextDrawShowForPlayer(p, ZoneText[p]);
				}
			}
			
  			if(!PlayerInZone[p])
			{
				TextDrawSetString(ZoneText[p]," ");
			}
		}
		SetPlayerTeam(p, PlayerTeam[p]); // Fix anti team kill bug
	}
	
	return 1;
}

forward TakeOverTurf(playerid);
public TakeOverTurf(playerid)
{
	new
		string[128],
		Float:x,
		Float:y,
		Float:z;

    GetPlayerPos(playerid, x, y, z);

	for(new i = 0; i < sizeof(ZoneInfo); i++)
	{
		if(x >= ZoneInfo[i][zMinX] && x < ZoneInfo[i][zMaxX] && y>= ZoneInfo[i][zMinY] && y < ZoneInfo[i][zMaxY])
		{
			if(ZoneKills[PlayerTeam[playerid]][i] == 5)
			{
				for(new j = 0; j <sizeof(zones); j++)
				{
					if(IsPlayerInZone(playerid, j))
		 			{
				 	    if(PlayerTeam[playerid] == 1)
		 				{
							ZoneInfo[i][zColor] = GetPlayerColor(playerid);
							SaveZones();

							strmid(ZoneInfo[i][zzName],"Bikers" ,0, strlen("Bikers"), 255);
							SaveZones();

							GangZoneShowForAll(i, GetPlayerColor(playerid));
							ZoneKills[PlayerTeam[playerid]][i] = 0;

							format(string,sizeof(string),"(NEWSFLASH) The Bikers have taken over a turf at %s!",zones[j][zone_name]);
							SendClientMessageToAll(LIGHTBLUE, string);
						}
			   			if(PlayerTeam[playerid] == 2)
					    {
							ZoneInfo[i][zColor] = GetPlayerColor(playerid);
							SaveZones();

							strmid(ZoneInfo[i][zzName],"Hustlers" ,0, strlen("Hustlers"), 255);
							SaveZones();

							GangZoneShowForAll(i, GetPlayerColor(playerid));
							ZoneKills[PlayerTeam[playerid]][i] = 0;

							format(string,sizeof(string),"(NEWSFLASH) The Hustlers have taken over a turf at %s!",zones[j][zone_name]);
							SendClientMessageToAll(LIGHTBLUE, string);
						}
				  		if(PlayerTeam[playerid] == 3)
				    	{
							ZoneInfo[i][zColor] = GetPlayerColor(playerid);
							SaveZones();

							strmid(ZoneInfo[i][zzName],"Grove" ,0, strlen("Grove"), 255);
							SaveZones();

							GangZoneShowForAll(i, GetPlayerColor(playerid));
							ZoneKills[PlayerTeam[playerid]][i] = 0;

							format(string,sizeof(string),"(NEWSFLASH) The Grove Street Family have taken over a turf at %s!",zones[j][zone_name]);
							SendClientMessageToAll(LIGHTBLUE, string);
						}
				  		if(PlayerTeam[playerid] == 4)
				    	{
							ZoneInfo[i][zColor] = GetPlayerColor(playerid);
							SaveZones();

							strmid(ZoneInfo[i][zzName],"Ballas" ,0, strlen("Ballas"), 255);
							SaveZones();

							GangZoneShowForAll(i, GetPlayerColor(playerid));
							ZoneKills[PlayerTeam[playerid]][i] = 0;

							format(string,sizeof(string),"(NEWSFLASH) The Ballas Family have taken over a turf at %s!",zones[j][zone_name]);
							SendClientMessageToAll(LIGHTBLUE, string);
						}
					 	if(PlayerTeam[playerid] == 5)
			    		{
							ZoneInfo[i][zColor] = GetPlayerColor(playerid);
							SaveZones();

							strmid(ZoneInfo[i][zzName],"Strippers" ,0, strlen("Strippers"), 255);
							SaveZones();

							GangZoneShowForAll(i, GetPlayerColor(playerid));
							ZoneKills[PlayerTeam[playerid]][i] = 0;

							format(string,sizeof(string),"(NEWSFLASH) The Strippers have taken over a turf at %s!",zones[j][zone_name]);
							SendClientMessageToAll(LIGHTBLUE, string);
						}
					 	if(PlayerTeam[playerid] == 6)
			    		{
							ZoneInfo[i][zColor] = GetPlayerColor(playerid);
							SaveZones();

							strmid(ZoneInfo[i][zzName],"The Rich" ,0, strlen("The Rich"), 255);
							SaveZones();

							GangZoneShowForAll(i, GetPlayerColor(playerid));
							ZoneKills[PlayerTeam[playerid]][i] = 0;

							format(string,sizeof(string),"(NEWSFLASH) The Rich People have taken over a turf at %s!",zones[j][zone_name]);
							SendClientMessageToAll(LIGHTBLUE, string);
						}
					 	if(PlayerTeam[playerid] == 7)
			    		{
							ZoneInfo[i][zColor] = GetPlayerColor(playerid);
							SaveZones();

							strmid(ZoneInfo[i][zzName],"Beach People" ,0, strlen("Beach People"), 255);
							SaveZones();

							GangZoneShowForAll(i, GetPlayerColor(playerid));
							ZoneKills[PlayerTeam[playerid]][i] = 0;

							format(string,sizeof(string),"(NEWSFLASH) The Beach People have taken over a turf at %s!",zones[j][zone_name]);
							SendClientMessageToAll(LIGHTBLUE, string);
						}
			   			if(PlayerTeam[playerid] == 8)
					    {
							ZoneInfo[i][zColor] = GetPlayerColor(playerid);
							SaveZones();

							strmid(ZoneInfo[i][zzName],"Chickens" ,0, strlen("Chickens"), 255);
							SaveZones();

							GangZoneShowForAll(i, GetPlayerColor(playerid));
							ZoneKills[PlayerTeam[playerid]][i] = 0;

							format(string,sizeof(string),"(NEWSFLASH) The Chickens have taken over a turf at %s!",zones[j][zone_name]);
							SendClientMessageToAll(LIGHTBLUE, string);
						}
				  		if(PlayerTeam[playerid] == 9)
				 	 	{
							ZoneInfo[i][zColor] = GetPlayerColor(playerid);
							SaveZones();

							strmid(ZoneInfo[i][zzName],"Police" ,0, strlen("Police"), 255);
							SaveZones();

							GangZoneShowForAll(i, GetPlayerColor(playerid));
							ZoneKills[PlayerTeam[playerid]][i] = 0;

							format(string,sizeof(string),"(NEWSFLASH) The Police have taken over a turf at %s!",zones[j][zone_name]);
							SendClientMessageToAll(LIGHTBLUE, string);
						}
					}
				}
			}
		}
	}
	return 1;
}

forward GivePaycheckToAll();
public GivePaycheckToAll()
{
	for(new p = 0; p <MAX_PLAYERS; p ++)
	{
	    GameTextForPlayer(p, "$ PAYCHECK $~n~~w~------------~n~~g~$5000,-~n~~w~------------",5000,3);
	    GivePlayerMoney(p, 5000);
	}
	return 1;
}


LoadZones()
{

	new arrCoords[6][128],
		strFromFile2[128],
		File: file = fopen("zones.ini", io_read),
		idx;
		
	if (file)
	{
		while (idx < sizeof(ZoneInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
   			ZoneInfo[idx][zColor] = strval(arrCoords[0]);
			strmid(ZoneInfo[idx][zzName], arrCoords[1],0, strlen(arrCoords[1]), 255);
			ZoneInfo[idx][zMinX] = floatstr(arrCoords[2]);
			ZoneInfo[idx][zMinY] = floatstr(arrCoords[3]);
			ZoneInfo[idx][zMaxX] = floatstr(arrCoords[4]);
			ZoneInfo[idx][zMaxY] = floatstr(arrCoords[5]);
			idx++;
		}
		fclose(file);
	}
	
	return true;
}

SaveZones()
{
	new idx,
		File: file2,
		coordsstring[128];

	while (idx < sizeof(ZoneInfo))
	{
		format(coordsstring, sizeof(coordsstring), "%i,%s,%f,%f,%f,%f\n",
		ZoneInfo[idx][zColor],
		ZoneInfo[idx][zzName],
		ZoneInfo[idx][zMinX],
		ZoneInfo[idx][zMinY],
		ZoneInfo[idx][zMaxX],
		ZoneInfo[idx][zMaxY]);

		if(idx == 0)
		{
			file2 = fopen("zones.ini", io_write);
		}
		
		else
		{
			file2 = fopen("zones.ini", io_append);
		}
		
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	
	return true;
}

IntToHex(number)
{
	new
		str[128];
		
	for (new i = 7; i >= 0; i--)
	{
		str[i] = ( number & 0x0F) + 0x30;
		str[i] += (str[i] > '9') ? 0x07 : 0x00;
		number >>= 4;
	}
	
	str[8] = '\0';
	
	return str;
}

split(const strsrc[], strdest[][], delimiter)
{
	new i,
		li,
		aNum,
		len;

	while(i <= strlen(strsrc))
	{
	    if(strsrc[i]==delimiter || i==strlen(strsrc))
		{
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}

	return true;
}

LoadVehicles(const filename[])
{
	new
		File:file_ptr,
		line[128],
		var_from_line[64],
	 	vehicletype,
	 	Float:SpawnX,
	 	Float:SpawnY,
	 	Float:SpawnZ,
 		Float:SpawnRot,
     	Color1, Color2,
	 	index,
	 	vehicles_loaded;

	file_ptr = fopen(filename,filemode:io_read);
	if(!file_ptr) return false;

	while(fread(file_ptr,line,256) > 0)
	{
	    index = 0;
  		index = token(line,var_from_line,',',index);
  		if(index == (-1)) continue;
  		vehicletype = strval(var_from_line);
   		if(vehicletype < 400 || vehicletype > 611) continue;
  		index = token(line,var_from_line,',',index+1);
  		if(index == (-1)) continue;
  		SpawnX = floatstr(var_from_line);
  		index = token(line,var_from_line,',',index+1);
  		if(index == (-1)) continue;
  		SpawnY = floatstr(var_from_line);
  		index = token(line,var_from_line,',',index+1);
  		if(index == (-1)) continue;
  		SpawnZ = floatstr(var_from_line);
  		index = token(line,var_from_line,',',index+1);
  		if(index == (-1)) continue;
  		SpawnRot = floatstr(var_from_line);
  		index = token(line,var_from_line,',',index+1);
  		if(index == (-1)) continue;
  		Color1 = strval(var_from_line);
  		index = token(line,var_from_line,';',index+1);
  		Color2 = strval(var_from_line);

		CreateVehicle(vehicletype, SpawnX, SpawnY, SpawnZ, SpawnRot, Color1, Color2, 60);
	}
	
	fclose(file_ptr);
	
	return vehicles_loaded;
}

token(const string[], return_str[], delim, start_index)
{
	new
		x = 0;
		
	while(string[start_index] != EOS && string[start_index] != delim)
	{
	    return_str[x] = string[start_index];
	    x++;
	    start_index++;
	}
	return_str[x] = EOS;
	if(string[start_index] == EOS) start_index = (-1);
	
	return start_index;
}

stock setAlpha(color, alpha)
{
	if(alpha > 0xFF)
	{
		alpha = 0xFF;
	}
	
	else if(alpha < 0x00)
	{
		alpha = 0x00;
	}
	
	return(color & 0xFFFFFF00) | alpha;
}

strtok(const string[], &index)
{

	new
		length = strlen(string);

	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new
		offset = index,
		result[20];
		
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;

	return result;
}

forward Float:GetDistanceBetweenPlayers(p1,p2);
public Float:GetDistanceBetweenPlayers(p1,p2)
{

	new
		Float:Pos[6];
		
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	
	GetPlayerPos(p1,Pos[0],Pos[1],Pos[2]);
	GetPlayerPos(p2,Pos[3],Pos[4],Pos[5]);
	return floatsqroot(floatpower(floatabs(floatsub(Pos[3],Pos[0])),2)+floatpower(floatabs(floatsub(Pos[4],Pos[1])),2)+floatpower(floatabs(floatsub(Pos[5],Pos[2])),2));
}

IsPlayerInZone(playerid, zoneid)
{

	if(zoneid == -1) return 0;
	
 	new
 		Float:x,
	 	Float:y,
	 	Float:z;
	 	
 	GetPlayerPos(playerid,x,y,z);
	if(x >= zones[zoneid][zone_minx] && x < zones[zoneid][zone_maxx] && y >= zones[zoneid][zone_miny] && y < zones[zoneid][zone_maxy] && z >= zones[zoneid][zone_minz] && z < zones[zoneid][zone_maxz] && z < 900.0) return 1;

	return 0;
}
// EOF.
